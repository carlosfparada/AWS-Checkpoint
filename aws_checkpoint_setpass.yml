---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - include_role: 
      name: utils_hosts_aws

- name: Setup Checkpoint
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files: vars/main.yml
  tasks:

  # cat private-key.pem | ansible-vault encrypt_string  --stdin-name 'private_key' --output private-key.vault
  - ansible.builtin.include_vars: files/private-key.yml

  - name: Copy private key locally
    ansible.builtin.copy:
      content: "{{ private_key }}"
      dest: /tmp/private-key.pem
      mode: '0600'

  # https://community.checkpoint.com/t5/Cloud-Network-Security/CloudGuard-Network-security-default-password/td-p/201985
  - name: Set admin initial password and config system
    ansible.builtin.expect:
      command: "ssh -o StrictHostKeyChecking=no -i /tmp/private-key.pem admin@{{ groups['checkpoint'][0] }}"
      # echo: true
      responses:
        # In order to configure your system, please access the Web UI and finish the First Time Wizard.
        # set user admin password
        # i-047b52cf6b7891b2c> set user admin password-hash {{ new_password | password_hash('md5') }}
        "i-.*>":
          - "set user admin password-hash {{ new_password | password_hash('md5') }}"
          - "set expert-password-hash {{ new_password | password_hash('md5') }}"
          - "set grub2-password-hash {{ new_password | password_hash('md5') }}"
          # - expert
          # - "config_system --config-string \"admin_hash={{new_password|password_hash('md5')}}&default_gw_v4=10.0.0.1&domainname=ansible.redhat.com&download_info=false&ftw_sic_key=123456&gateway_cluster_member=false&gateway_daip=false&hostname=checkpoint-1&iface=eth0&install_mlm=false&install_ppak=true&install_security_managment=false&ipaddr_v4={{hostvars[groups['checkpoint'][0]]}}&ipstat_v4=manually&masklen_v4=255.255.255.0&mgmt_admin_name=admin&mgmt_admin_passwd={{new_password}}&mgmt_admin_radio=gaia_admin&mgmt_gui_clients_radio=any&timezone='Europe/Lisbon'&install_security_gw=true\"" #&maintenance_hash=123456\""

          - config_system --config-string "admin_hash='$1$4Yowk5ve$b2XnIUqpoCTpXs1.GT.qo0'&iface=eth0&ipstat_v4=manually&ipaddr_v4=10.0.0.116&masklen_v4=255.255.255.0&default_gw_v4=10.0.0.1&ipstat_v6=off&hostname=checkpoint-1&domainname=ansible.redhat.com&primary=10.0.0.2&timezone='Europe/Lisbon'&install_security_managment=true&&mgmt_admin_radio=gaia_admin&install_security_gw=true&gateway_cluster_member=false&mgmt_gui_clients_radio=any&reboot_if_required=true&maintenance_hash='$1$4Yowk5ve$b2XnIUqpoCTpXs1.GT.qo0'"
          # - exit
        # "(?i)Enter expert password":
        #   - "{{ new_password }}" 
        # "Expert":
        #   - "config_system --config-string \"hostname=myhost&domainname=somedomain.com&timezone='America/Indiana/Indianapolis'&ftw_sic_key=aaaa&install_security_gw=true&gateway_daip=false&install_ppak=true&gateway_cluster_member=true&install_security_managment=false&maintenance_hash=123456\""
        #   - exit
          # - 'mgmt_cli -r true --domain MDS set api-settings accepted-api-calls-from "All IP addresses"'
          # - api restart
    no_log: false # hide passwords on logs

  - name: Wait until Checkpoint comes back
    wait_for:
      port: 22
      state: started
      timeout: 1800
      delay: 10
      host: "{{ groups['checkpoint'][0] }}"  

  - name: Sleep for 10 seconds and continue with play
    wait_for:
      timeout: 10
    delegate_to: localhost

      # https://community.checkpoint.com/t5/Cloud-Network-Security/CloudGuard-Network-security-default-password/td-p/201985
  - name: Save configs
    ansible.builtin.expect:
      command: "ssh -o StrictHostKeyChecking=no -i /tmp/private-key.pem admin@{{ groups['checkpoint'][0] }}"
      # echo: true
      responses:
        "checkpoint-1>":
          # - 'mgmt_cli -r true --domain MDS set api-settings accepted-api-calls-from "All IP addresses"'
          # - "mgmt_cli -r true set api-settings accepted-api-calls-from "All IP addresses" --domain 'System Data'"
          # - api restart
          - save config
          - exit
    no_log: false # hide passwords on logs

# - name: Setup Windows
#   hosts: groups['windows'][0]
#   connection: local
#   gather_facts: no
#   vars_files: vars/main.yml
#   vars:
#     # ansible_become_user: user
#     # ansible_become_pass: password
#   tasks:
#     - name: Copying from Ansible to Windows local disk
#       ansible.windows.win_copy:
#         src: files/Check_Point_R81.20_T631_SmartConsole.exe
#         dest: C:\
#         remote_src: yes
#         force: True
#       become: True
#       become_method: runas

#     - name: Install exe file
#       ansible.windows.win_package:
#         path: C:\Check_Point_R81.20_T631_SmartConsole.exe
#         arguments: /install /passive /norestart
